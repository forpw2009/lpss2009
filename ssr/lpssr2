ss%3A//Y2hhY2hhMjA6bHBzczIwMThAOTUuMTYzLjE5Ny4xMTQ6MjAxOA%3D%3D%23LPSS%20BWH%20LA%0Assr%3A//MzUuMTk3LjE0Ny4xNjg6OTA5MTphdXRoX3NoYTFfdjQ6Y2hhY2hhMjA6aHR0cF9zaW1wbGU6YkhCemMyRmtiV2x1TVRJei8_cmVtYXJrcz1URkJUVXlCSFR5QlRSdw%0Assr%3A//MzUuMjAwLjIxLjE0Njo4MDgxOmF1dGhfc2hhMV92NDpjaGFjaGEyMDpodHRwX3NpbXBsZTpiSEJ6YzJGa2JXbHVNVEl6Lz9yZW1hcmtzPVRGQlRVeUJIVHlCS1VB%0Assr%3A//MTAzLjIwOC44NS4zMjoyMTI0OmF1dGhfc2hhMV92NDphZXMtMjU2LWNmYjp0bHMxLjJfdGlja2V0X2F1dGg6TURVd056QXcvP3JlbWFya3M9VEZCVFV5QlRSeUJUVnpF%0Assr%3A//MTAzLjIwOC44NS4yMDQ6MjEyNDphdXRoX3NoYTFfdjQ6YWVzLTI1Ni1jZmI6dGxzMS4yX3RpY2tldF9hdXRoOk1EVXdOekF3Lz9yZW1hcmtzPVRGQlRVeUJUUnlCVFZ6SQ%0Assr%3A//Zm9yaGl0ZWNoODE3Lmltd29yay5uZXQ6ODA4MjpvcmlnaW46Y2hhY2hhMjA6aHR0cF9zaW1wbGU6WVdSdGFXNHhNak0vP3JlbWFya3M9VEZCVFV5QkRTQ0JFV0E%0Assr%3A//MTAzLjc1LjExOC4xMjg6MjEyNDphdXRoX3NoYTFfdjQ6YWVzLTI1Ni1jZmI6dGxzMS4yX3RpY2tldF9hdXRoOk1EVXdOekF3Lz9yZW1hcmtzPVRGQlRVeUJVV1NCS1VESQ%0Assr%3A//MTAzLjc1LjExOC4yMTA6MjEyNDphdXRoX3NoYTFfdjQ6YWVzLTI1Ni1jZmI6dGxzMS4yX3RpY2tldF9hdXRoOk1EVXdOekF3Lz9yZW1hcmtzPVRGQlRVeUJVV1NCS1VETQ%0Assr%3A//MzguMTA2LjIzLjEwOjIxMjQ6YXV0aF9zaGExX3Y0OmFlcy0yNTYtY2ZiOnRsczEuMl90aWNrZXRfYXV0aDpNRFV3TnpBdy8_cmVtYXJrcz1URkJUVXlCTVFTQkRUakk%0Assr%3A//MTAzLjc1LjExNy4yNDE6MjEyNDphdXRoX3NoYTFfdjQ6YWVzLTI1Ni1jZmI6dGxzMS4yX3RpY2tldF9hdXRoOk1EVXdOekF3Lz9yZW1hcmtzPVRGQlRVeUJEU0NCSVN3%0Assr%3A//MTAzLjQ0LjYxLjgwOjIxMjQ6YXV0aF9zaGExX3Y0OmFlcy0yNTYtY2ZiOnRsczEuMl90aWNrZXRfYXV0aDpNRFV3TnpBdy8_cmVtYXJrcz1URkJUVXlCRFNDQklTdw